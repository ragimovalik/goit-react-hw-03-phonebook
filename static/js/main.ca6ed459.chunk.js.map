{"version":3,"sources":["components/InputBox/InputBox.module.css","components/Form/Form.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/PageTitle/PageTitle.jsx","components/InputBox/InputBox.jsx","components/Form/Form.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","useStyles","createUseStyles","PageTitle","marginBottom","padding","textAlign","color","title","classes","className","InputBox","htmlFor","type","id","name","pattern","placeholder","required","value","labelText","onChange","styles","Form__wrap","Form__label","Form__input","defaultProps","Form","onSubmitData","useState","number","contact","setContact","target","prevState","onSubmit","event","preventDefault","Form__btn","ContactListItem","onClick","ContactList__item","ContactList__name","ContactList__phone","Provider","size","ContactList__icon","ContactList","contacts","ContactList__title","map","Filter","textForFilter","Filter__wrap","Filter__title","App","setContacts","filter","setFilter","useEffect","storedData","localStorage","getItem","parsedData","JSON","parse","setItem","stringify","newContact","Math","ceil","random","find","toLowerCase","includes","contactsChecker","prevContacts","alert","currentTarget","normalizedText","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca6ed459.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"darkened\":\"#597387\",\"text\":\"#252b31\",\"Form__wrap\":\"InputBox_Form__wrap__34tVH\",\"Form__label\":\"InputBox_Form__label__208g7\",\"Form__input\":\"InputBox_Form__input__2NZUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"darkened\":\"#597387\",\"text\":\"#252b31\",\"white\":\"#ffffff\",\"Form\":\"Form_Form__2WdKL\",\"Form__btn\":\"Form_Form__btn__200cl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"text\":\"#252b31\",\"lightened\":\"#f6fafb\",\"red\":\"#ff0000\",\"ContactList\":\"ContactList_ContactList__17Bm1\",\"ContactList__title\":\"ContactList_ContactList__title__22yeU\",\"ContactList__item\":\"ContactList_ContactList__item__W-UmW\",\"ContactList__name\":\"ContactList_ContactList__name__PgfGd\",\"ContactList__phone\":\"ContactList_ContactList__phone__1_Op3\",\"ContactList__icon\":\"ContactList_ContactList__icon__3yrOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__wrap\":\"Filter_Filter__wrap__1ngnB\",\"Filter__title\":\"Filter_Filter__title__z_Y3e\"};","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  PageTitle: {\n    marginBottom: 20,\n    padding: 10,\n    textAlign: 'center',\n    color: '#252b31',\n  },\n});\n\nconst PageTitle = ({ title }) => {\n  const classes = useStyles();\n\n  return <h1 className={classes.PageTitle}>{title}</h1>;\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default PageTitle;\n","import PropTypes from 'prop-types';\nimport styles from './InputBox.module.css';\n\nconst InputBox = ({\n  htmlFor,\n  type,\n  id,\n  name,\n  title,\n  pattern,\n  placeholder,\n  required,\n  value,\n  labelText,\n  onChange,\n}) => {\n  const patternText =\n    \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n\n  const patternPhone = '^[+]{0,1}[ .()0-9-]{3,8}[0-9. -]{3,11}$';\n  // '/(+?( |-|.)?d{1,2}( |-|.)?)?((?d{3})?|d{3})( |-|.)?(d{3}( |-|.)?d{4})/';\n\n  return (\n    <div className={styles.Form__wrap}>\n      <label htmlFor={htmlFor} className={styles.Form__label}>\n        <span>{labelText}</span>\n      </label>\n\n      <input\n        className={styles.Form__input}\n        type={type}\n        id={id}\n        name={name}\n        title={title}\n        pattern={pattern === 'text' ? `${patternText}` : `${patternPhone}`}\n        placeholder={placeholder}\n        required={required}\n        onChange={onChange}\n        value={value}\n      />\n    </div>\n  );\n};\n\nInputBox.defaultProps = {\n  title: 'Please enter some text',\n  required: true,\n  labelText: 'Label for -->',\n};\n\nInputBox.propTypes = {\n  htmlFor: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  pattern: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  labelText: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n}.isRequired;\n\nexport default InputBox;\n","import { useState } from 'react';\nimport InputBox from '../InputBox/InputBox';\nimport PropTypes from 'prop-types';\nimport styles from './Form.module.css';\n\nconst Form = ({ onSubmitData }) => {\n  const [contact, setContact] = useState({ name: '', number: '' });\n\n  const setDefaultState = () => setContact({ name: '', number: '' });\n\n  const onChange = ({ target: { name, value } }) => {\n    return setContact(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmitData(contact);\n\n    setDefaultState();\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <InputBox\n        labelText={'Name'}\n        htmlFor={'name'}\n        type={'text'}\n        id={'name'}\n        name={'name'}\n        title={\n          \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        }\n        pattern={'text'}\n        placeholder={'Name'}\n        required={true}\n        value={contact.name}\n        onChange={onChange}\n      />\n\n      <InputBox\n        labelText={'Phone number'}\n        htmlFor={'tel'}\n        type={'tel'}\n        id={'tel'}\n        name={'number'}\n        title={\n          'Номер телефона должен состоять из 11-12 цифр и может содержать цифры, точки, пузатые скобки и может начинаться с +'\n        }\n        pattern={'phone'}\n        placeholder={'Phone Number'}\n        required={true}\n        value={contact.number}\n        onChange={onChange}\n      />\n      <button className={styles.Form__btn} type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onSubmitData: PropTypes.func.isRequired,\n};\n\nexport default Form;\n\n/* \n// Class Component\n\nclass Form extends Component {\n  state = { name: '', number: '' };\n\n  setDefaultState = () =>\n    this.setState({\n      name: '',\n      number: '',\n    });\n\n  onChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmitData(this.state);\n\n    this.setDefaultState();\n  };\n\n  render() {\n    return (\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\n        <InputBox\n          labelText={'Name'}\n          htmlFor={'name'}\n          type={'text'}\n          id={'name'}\n          name={'name'}\n          title={\n            \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          }\n          pattern={'text'}\n          placeholder={'Name'}\n          required={true}\n          value={this.state.name}\n          onChange={this.onChange}\n        />\n\n        <InputBox\n          labelText={'Phone number'}\n          htmlFor={'tel'}\n          type={'tel'}\n          id={'tel'}\n          name={'number'}\n          title={\n            'Номер телефона должен состоять из 11-12 цифр и может содержать цифры, точки, пузатые скобки и может начинаться с +'\n          }\n          pattern={'phone'}\n          placeholder={'Phone Number'}\n          required={true}\n          value={this.state.number}\n          onChange={this.onChange}\n        />\n        <button className={styles.Form__btn} type=\"submit\">\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n*/\n","import PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\nimport { MdDelete } from 'react-icons/md';\nimport { IconContext } from 'react-icons';\n\nconst ContactListItem = ({ name, number, id, onClick }) => (\n  <li className={styles.ContactList__item}>\n    <p className={styles.ContactList__name}>{name}</p>\n    <p className={styles.ContactList__phone}>{number}</p>\n\n    <IconContext.Provider\n      value={{\n        color: 'inherit',\n        size: '1.2rem',\n        className: 'global-class-name',\n        title: 'delete',\n      }}\n    >\n      <div onClick={() => onClick(id)}>\n        <MdDelete className={styles.ContactList__icon} />\n      </div>\n    </IconContext.Provider>\n  </li>\n);\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import ContactListItem from '../ContactListItem/ContactListItem';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onClick }) => (\n  <div className={styles.ContactList}>\n    <h3 className={styles.ContactList__title}>Contact List</h3>\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onClick={onClick}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n        .isRequired,\n    }),\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import InputBox from '../InputBox/InputBox';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ textForFilter, onChange }) => (\n  <div className={styles.Filter__wrap}>\n    <h3 className={styles.Filter__title}>Search</h3>\n\n    <InputBox\n      labelText={'Find Name'}\n      htmlFor={'filter'}\n      type={'text'}\n      id={'filter'}\n      name={'filter'}\n      pattern={'text'}\n      placeholder={'Name'}\n      required={false}\n      value={textForFilter}\n      onChange={onChange}\n    />\n  </div>\n);\n\nFilter.propTypes = {\n  textForFilter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport PageTitle from './components/PageTitle/PageTitle';\nimport Form from './components/Form/Form';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const storedData = localStorage.getItem('al-phonebook');\n    const parsedData = JSON.parse(storedData);\n\n    if (parsedData) setContacts([...parsedData]);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('al-phonebook', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const contactsChecker = name => {\n    return contacts.find(contact =>\n      contact.name.toLowerCase().includes(name.toLowerCase()),\n    );\n  };\n\n  const formSubmitHandler = ({ name, number }) => {\n    const idSetter = `id-${Math.ceil(Math.random() * 100000)}`;\n    const newContact = { id: idSetter, name, number };\n\n    contactsChecker(name)\n      ? alert(`${name} is already in contacts`)\n      : setContacts(prevContacts => [...prevContacts, newContact]);\n  };\n\n  const filterHandler = ({ currentTarget }) => {\n    setFilter(currentTarget.value);\n  };\n\n  const filteredContacts = () => {\n    const normalizedText = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedText),\n    );\n  };\n\n  const deleteHandler = id => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== id),\n    );\n  };\n\n  return (\n    <>\n      <PageTitle title={'Phonebook'} />\n      <Form onSubmitData={formSubmitHandler} />\n      <Filter textForFilter={filter} onChange={filterHandler} />\n      <ContactList contacts={filteredContacts()} onClick={deleteHandler} />\n    </>\n  );\n};\n\nexport default App;\n\n/*\n// ================== CLASS COMPONENT ==================\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    // console.log('C. was MOUNTED');\n\n    const storedData = localStorage.getItem('al-phonebook');\n    const parsedData = JSON.parse(storedData);\n\n    if (parsedData) this.setState(contacts => ({ contacts: parsedData }));\n  }\n\n  componentDidUpdate() {\n    const { contacts } = this.state;\n\n    // console.log('C. was UPDATED');\n\n    localStorage.setItem('al-phonebook', JSON.stringify(contacts));\n  }\n\n  contactsChecker = name => {\n    const { contacts } = this.state;\n\n    return contacts.find(contact =>\n      contact.name.toLowerCase().includes(name.toLowerCase()),\n    );\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    const idSetter = `id-${Math.ceil(Math.random() * 100000)}`;\n    const newContact = { id: idSetter, name, number };\n\n    this.contactsChecker(name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(contacts => ({\n          contacts: [...this.state.contacts, newContact],\n        }));\n  };\n\n  filterHandler = ({ currentTarget }) => {\n    this.setState({\n      filter: currentTarget.value,\n    });\n  };\n\n  filteredContacts = () => {\n    // const { contacts, filter } = this.state;\n    const normalizedText = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedText),\n    );\n  };\n\n  deleteHandler = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <PageTitle title={'HomeWork #3-Phonebook of React'} />\n        <Form onSubmitData={this.formSubmitHandler} />\n        <Filter\n          textForFilter={this.state.filter}\n          onChange={this.filterHandler}\n        />\n        <ContactList\n          contacts={this.filteredContacts()}\n          onClick={this.deleteHandler}\n        />\n      </>\n    );\n  }\n}\n*/\n\n/*\n{ id: 'id-12345', name: 'Daniel Defoe', number: '987-6541210' },\n{ id: 'id-54321', name: 'Jonathan Swift', number: '987-6542210' },\n{ id: 'id-98765', name: 'Robert Stevenson', number: '987-6543210' },\n{ id: 'id-56789', name: 'Lewis Carroll', number: '987-6544210' },\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\nimport 'modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__item\":\"ContactListItem_ContactList__item__15V8n\",\"ContactList__name\":\"ContactListItem_ContactList__name__3WXfp\",\"ContactList__phone\":\"ContactListItem_ContactList__phone__2H2Wl\",\"ContactList__icon\":\"ContactListItem_ContactList__icon__36aSS\"};"],"sourceRoot":""}